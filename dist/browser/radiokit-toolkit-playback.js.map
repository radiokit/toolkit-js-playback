{"version":3,"sources":["webpack:///webpack/bootstrap dec11027f118875addbc","webpack:///./lib/index.ts","webpack:///./lib/channel/Player.ts","webpack:///./lib/Base.ts","webpack:///./lib/clock/SyncClock.ts","webpack:///./lib/channel/PlaylistFetcher.ts","webpack:///./lib/channel/Playlist.ts","webpack:///./lib/channel/Track.ts","webpack:///./lib/audio/AudioManager.ts","webpack:///./lib/audio/Factory.ts","webpack:///./lib/audio/HTMLPlayer.ts"],"names":[],"mappings":"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","file":"radiokit-toolkit-playback.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap dec11027f118875addbc","import { Player }  from './channel/Player';\n\nexport const Channel = {\n  Player,\n};\n\n\n// TODO remove\nif(typeof(window) !== \"undefined\") {\n  window['RadioKitToolkitPlayback'] = {\n    Channel: {\n      Player,\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/index.ts","import { Base } from '../Base';\nimport { SyncClock } from '../clock/SyncClock';\nimport { Playlist } from '../channel/Playlist';\nimport { PlaylistFetcher } from '../channel/PlaylistFetcher';\nimport { AudioManager } from '../audio/AudioManager';\n\n\n/**\n * This class represents a single channel (stream) that is broadcasted from\n * RadioKit servers.\n */\nexport class Player extends Base {\n  private __channelId:        string;\n  private __accessToken:      string;\n  private __fetchTimeoutId:   number = 0;\n  private __audioManager:     AudioManager;\n  private __started:          boolean;\n  private __clock?:           SyncClock = null;\n  private __playlistFetcher?: PlaylistFetcher = null;\n\n\n  constructor(channelId: string, accessToken: string) {\n    super();\n\n    this.__started = false;\n    this.__channelId = channelId;\n    this.__accessToken = accessToken;\n    this.__audioManager = new AudioManager();\n  }\n\n\n  public start() : Player {\n    this.__startFetching();\n    this.__started = true;\n    return this;\n  }\n\n\n  public stop() : Player {\n    this.__stopFetching();\n    this.__audioManager.cleanup()\n    this.__started = false;\n    return this;\n  }\n\n\n  public isStarted() : boolean {\n    return this.__started;\n  }\n\n\n  protected _loggerTag() : string {\n    return `${this['constructor']['name']} ${this.__channelId}`;\n  }\n\n\n  private __startFetching() : void {\n    this.__fetchOnceAndRepeat();\n  }\n\n\n  private __stopFetching() : void {\n    if(this.__fetchTimeoutId !== 0) {\n      clearTimeout(this.__fetchTimeoutId);\n      this.__fetchTimeoutId = 0;\n    }\n  }\n\n\n  private __fetchOnce() : Promise<Playlist> {\n    if(this.__clock === null) {\n      this.debug(\"Fetch: Synchronizing clock...\");\n      const promise = new Promise<Playlist>((resolve: any, reject: any) => {\n        SyncClock.makeAsync()\n          .then((clock) => {\n            this.debug(\"Fetch: Synchronized clock\");\n            this.__clock = clock;\n            this.__playlistFetcher = new PlaylistFetcher(this.__channelId, this.__accessToken, clock);\n\n            return this.__fetchPlaylist(resolve, reject);\n          })\n          .catch((error) => {\n            this.warn(`Fetch error: Unable to sync clock (${error.message})`);\n            reject(new Error(`Unable to sync clock (${error.message})`));\n          });\n      });\n      return promise;\n\n    } else {\n      const promise = new Promise<Playlist>((resolve: any, reject: any) => {\n        this.__fetchPlaylist(resolve, reject);\n      });\n      return promise;\n    }\n  }\n\n\n  private __fetchPlaylist(resolve: any, reject: any) : void {\n    this.debug(\"Fetch: Fetching playlist...\");\n    this.__playlistFetcher.fetchAsync()\n      .then((playlist) => {\n        this.debug(\"Fetch: Done\");\n        resolve(playlist);\n      })\n      .catch((error) => {\n        this.warn(`Fetch error: Unable to fetch playlist (${error.message})`);\n        reject(new Error(`Unable to fetch playlist (${error.message})`));\n      });\n  }\n\n\n  private __fetchOnceAndRepeat() : void {\n    this.__fetchOnce()\n      .then((playlist) => {\n        if(this.__started) {\n          this.__audioManager.update(playlist, this.__clock);\n        }\n        this.__scheduleNextFetch();\n      })\n      .catch((error) => {\n        this.__scheduleNextFetch();\n      });\n  }\n\n\n  private __scheduleNextFetch() : void {\n    if(this.__started) {\n      const timeout = 2000 + Math.round(Math.random() * 250);\n      this.debug(`Fetch: Scheduling next fetch in ${timeout} ms`);\n      this.__fetchTimeoutId = setTimeout(() => {\n        this.__fetchTimeoutId = 0;\n        this.__fetchOnceAndRepeat();\n      }, timeout);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/channel/Player.ts","export abstract class Base {\n  private __events: any = {}; // FIXME\n\n\n  public on(eventName: string, callback) {\n    // TODO\n  }\n\n\n  public off(eventName: string, callback) {\n    // TODO\n  }\n\n\n  protected abstract _loggerTag() : string;\n\n\n  protected warn(message: string) : void {\n    console.warn(`[RadioKit.Playback ${new Date().toISOString()} ${this._loggerTag()}] ${message}`);\n  }\n\n\n  protected info(message: string) : void {\n    console.info(`[RadioKit.Playback ${new Date().toISOString()} ${this._loggerTag()}] ${message}`);\n  }\n\n\n  protected debug(message: string) : void {\n    console.debug(`[RadioKit.Playback ${new Date().toISOString()} ${this._loggerTag()}] ${message}`);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/Base.ts","import { Base } from '../Base';\n\n\n/**\n * This class creates a clock that is synchronized to RadioKit's servers.\n *\n * Use it instead of relying on browser's clock.\n *\n * Do not instantiate it directly, use provided factory makeAsyncForSure() instead.\n *\n * TODO:\n *\n * - handle super corner case when someone changes clock setting during runtime\n */\nexport class SyncClock extends Base {\n  private __offset: number;\n\n\n  /**\n   * Returns promise that builds new clock that is synchronized to the server.\n   */\n  public static makeAsync() : Promise<SyncClock> {\n    const promise = new Promise<SyncClock>((resolve: any, reject: any) => {\n      const xhr = new XMLHttpRequest();\n\n      xhr.open('OPTIONS', 'https://time.radiokitapp.org/api/time/v1.0/now', true);\n      xhr.setRequestHeader('Cache-Control', 'no-cache, must-revalidate');\n      xhr.timeout = 5000;  // ms\n\n      xhr.onerror = function(e) {\n        reject(new Error(`Unable to synchronize clock: Network error (${xhr.status})`));\n      }\n\n      xhr.onabort = function(e) {\n        reject(new Error(`Unable to synchronize clock: Aborted`));\n      }\n\n      xhr.ontimeout = function(e) {\n        reject(new Error(`Unable to synchronize clock: Timeout`));\n      }\n\n      // TODO include request duration while computing offset\n      xhr.onreadystatechange = function() {\n        if(xhr.readyState === 4) {\n          if(xhr.status === 200) {\n            resolve(new SyncClock(Date.parse(JSON.parse(xhr.responseText).utc_time)));\n\n          } else {\n            reject(new Error(`Unable to synchronize clock: Unexpected response (status = ${xhr.status})`));\n          }\n        }\n      };\n\n      xhr.send();\n    });\n\n\n    return promise;\n  }\n\n\n  /**\n   * Constructs new SyncClock clock.\n   *\n   * Passed serverDate argument is a RadioKit server time as UNIX timestamp.\n   *\n   * Do not use this constructor directly, use SyncClock.makeAsync() factory instead.\n   */\n  constructor(serverDate: number) {\n    super();\n    this.__offset = serverDate - Date.now(); // in milliseconds\n\n    this.debug(`Synchronized clock: offset = ${this.__offset} ms`);\n  }\n\n\n  public nowAsTimestamp() : number {\n    return Date.now() + this.__offset;\n  }\n\n\n  protected _loggerTag() : string {\n    return this['constructor']['name'];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/clock/SyncClock.ts","import { SyncClock } from '../clock/SyncClock';\nimport { Track } from './Track';\nimport { Playlist } from './Playlist';\n\n\n/**\n * This class represents a playlist of files to be played currently or\n * in a short time span on a given channel.\n */\nexport class PlaylistFetcher {\n  private __clock: SyncClock;\n  private __channelId: string;\n  private __accessToken: string;\n\n\n  constructor(channelId: string, accessToken: string, clock: SyncClock) {\n    this.__clock = clock;\n    this.__channelId = channelId;\n    this.__accessToken = accessToken;\n  }\n\n\n  /**\n   * Factory that asynchronously fetches and creates a playlist\n   * for a given channel.\n   */\n  public fetchAsync() : Promise<Playlist> {\n    const promise = new Promise<Playlist>((resolve: any, reject: any) => {\n      const now = this.__clock.nowAsTimestamp();\n      const xhr = new XMLHttpRequest();\n\n      const url = 'https://plumber.radiokitapp.org/api/rest/v1.0/media/input/file/radiokit/vault' +\n        '?a[]=id' +\n        '&a[]=name' +\n        '&a[]=file' +\n        '&a[]=cue_in_at' +\n        '&a[]=cue_out_at' +\n        '&a[]=cue_offset' +\n        '&a[]=fade_in_at' +\n        '&a[]=fade_out_at' +\n        '&s[]=cue%20' + encodeURIComponent(new Date(now).toISOString()) + '%2020%20600' + // seek 20 seconds back, 600 seconds forward\n        '&c[references][]=deq%20broadcast_channel_id%20' + encodeURIComponent(this.__channelId) +\n        '&o[]=cue_in_at%20asc';\n\n\n      xhr.open('GET', url, true);\n      xhr.setRequestHeader('Cache-Control', 'no-cache, must-revalidate');\n      xhr.setRequestHeader('Authorization', `Bearer ${this.__accessToken}`);\n      xhr.timeout = 15000;  // ms\n\n      xhr.onerror = function(e) {\n        reject(new Error(`Unable to fetch playlist: Network error (${xhr.status})`));\n      }\n\n      xhr.onabort = function(e) {\n        reject(new Error(`Unable to fetch playlist: Aborted`));\n      }\n\n      xhr.ontimeout = function(e) {\n        reject(new Error(`Unable to fetch playlist: Timeout`));\n      }\n\n      xhr.onreadystatechange = function() {\n        if(xhr.readyState === 4) {\n          if(xhr.status === 200) {\n            const responseAsJson = JSON.parse(xhr.responseText);\n            resolve(Playlist.makeFromJson(responseAsJson[\"data\"]));\n\n          } else {\n            reject(new Error(`Unable to fetch playlist: Unexpected response (status = ${xhr.status})`));\n          }\n        }\n      };\n\n      xhr.send();\n    });\n\n    return promise;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/channel/PlaylistFetcher.ts","import { SyncClock } from '../clock/SyncClock';\nimport { Track } from './Track';\n\n\n/**\n * This class represents a playlist of files to be played currently or\n * in a short time span on a given channel.\n */\nexport class Playlist {\n  private __tracks : Object;\n\n\n  /**\n   * Factory that creates a playlist out of JSON data in the API format.\n   */\n  public static makeFromJson(data: Array<Object>) : Playlist {\n    let tracks : Object = {};\n\n    for(let record of data) {\n      let id          : string       = record['id'];\n      let fileId      : string       = record['file'];\n      let cueInAt     : Date         = new Date(record['cue_in_at']);\n      let cueOutAt    : Date         = new Date(record['cue_out_at']);\n      let cueOffset   : number       = record['cue_offset'];\n      let fadeInAt    : Date | null  = record['fade_in_at'] !== null ? new Date(record['fade_in_at']) : null;\n      let fadeOutAt   : Date | null  = record['fade_out_at'] !== null ? new Date(record['fade_out_at']) : null;\n\n      let track = new Track(id, fileId, cueInAt, cueOutAt, cueOffset, fadeInAt, fadeOutAt);\n      tracks[id] = track;\n    }\n\n    return new Playlist(tracks);\n  }\n\n\n  constructor(tracks: Object) {\n    this.__tracks = tracks;\n  }\n\n\n  public getTracks() : Object {\n    return this.__tracks;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/channel/Playlist.ts","import { Base } from '../Base';\nimport { SyncClock } from '../clock/SyncClock';\n\n\nexport class Track extends Base {\n  private __id: string;\n  private __fileId: string;\n  private __cueOffset: number;\n  private __cueInAt: Date;\n  private __cueOutAt: Date;\n  private __fadeInAt?: Date;\n  private __fadeOutAt?: Date;\n\n\n  constructor(id: string, fileId: string, cueInAt: Date, cueOutAt: Date, cueOffset: number, fadeInAt?: Date, fadeOutAt?: Date) {\n    super();\n\n    this.__id = id;\n    this.__fileId = fileId;\n    this.__cueInAt = cueInAt;\n    this.__cueOutAt = cueOutAt;\n    this.__cueOffset = cueOffset;\n    this.__fadeInAt = fadeInAt;\n    this.__fadeOutAt = fadeOutAt;\n  }\n\n\n  public getId() : string {\n    return this.__id;\n  }\n\n\n  public getFileId() : string {\n    return this.__fileId;\n  }\n\n\n  protected _loggerTag() : string {\n    return `${this['constructor']['name']} ${this.__id}`;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/channel/Track.ts","import { Factory } from './Factory';\nimport { IAudioPlayer } from './IAudioPlayer';\nimport { Playlist } from '../channel/Playlist';\nimport { SyncClock } from '../clock/SyncClock';\n\n/**\n * This class contains audio manager that can convert playlist into\n * list of players that can actually play given tracks.\n *\n * It keeps their state and allows to update them once new playlist\n * is available.\n */\nexport class AudioManager {\n  private __audioPlayers : Object;\n\n\n  constructor() {\n    this.__audioPlayers = {};\n  }\n\n\n  /**\n   * Updates list of audio players to match given playlist.\n   *\n   * It performs diff on list of existing players and new playlist, so it\n   * only adds new tracks, removes old ones but do not touch these that\n   * are supposed to be currently playing.\n   */\n  public update(playlist: Playlist, clock: SyncClock) : void {\n    const tracks = playlist.getTracks();\n\n    // Collect list of existing and new track IDs\n    const existingIds = Object.keys(this.__audioPlayers);\n    const newIds = Object.keys(tracks);\n\n\n    // Make diff\n    const tracksToAdd = this.__diff(tracks, this.__audioPlayers);\n    const tracksToRemove = this.__diff(this.__audioPlayers, tracks);\n\n    for(let id in tracksToAdd) {\n      this.__audioPlayers[id] = Factory.makeFromTrack(tracks[id], clock);\n      this.__audioPlayers[id].play();\n    }\n\n    for(let id in tracksToRemove) {\n      this.__removeAudioPlayer(id);\n    }\n  }\n\n\n  /**\n   * Stops all playback and removes associated audio players.\n   */\n  public cleanup() : void {\n    for(let id in this.__audioPlayers) {\n      this.__removeAudioPlayer(id);\n    }\n  }\n\n\n  private __removeAudioPlayer(id: string) {\n    this.__audioPlayers[id].stop();\n    delete this.__audioPlayers[id];\n  }\n\n\n  private __diff(object1 : Object, object2 : Object) : Object {\n    const result = {};\n\n    const array1 = Object.keys(object1);\n    const array2 = Object.keys(object2);\n\n    for(let item of array1) {\n      if(array2.indexOf(item) === -1) {\n        result[item] = object1[item];\n      }\n    }\n\n    return result;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/audio/AudioManager.ts","import { IAudioPlayer } from './IAudioPlayer';\nimport { HTMLPlayer } from './HTMLPlayer';\nimport { Track } from '../channel/Track';\nimport { SyncClock } from '../clock/SyncClock';\n\n\n/**\n * This class implements factory pattern for creating players that utilize\n * the most of browser capabilities.\n */\nexport class Factory {\n  /**\n   * Instantiates an audio player for given track.\n   */\n  public static makeFromTrack(track: Track, clock: SyncClock) : IAudioPlayer {\n    return new HTMLPlayer(track, clock);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/audio/Factory.ts","import { IAudioPlayer } from './IAudioPlayer';\nimport { Track } from '../channel/Track';\nimport { SyncClock } from '../clock/SyncClock';\n\n\n/**\n * This class wraps HTML5 <audio> tag into a player that is capable of playing\n * sound from a given source at right time.\n *\n * Do not instantiate this directly, use Factory.make instead.\n */\nexport class HTMLPlayer implements IAudioPlayer {\n  private __track: Track;\n  private __clock: SyncClock;\n  private __audio: HTMLAudioElement;\n\n\n  constructor(track: Track, clock: SyncClock) {\n    this.__track = track;\n    this.__clock = clock;\n  }\n\n\n  play() {\n    const mp3Url = `https://essence.radiokitapp.org/api/cdn/v1.0/vault/file/${this.__track.getFileId()}/variant/webbrowser-mp3`;\n    const opusUrl = `https://essence.radiokitapp.org/api/cdn/v1.0/vault/file/${this.__track.getFileId()}/variant/webbrowser-opus`;\n\n\n    return true; // FIXME\n  }\n\n\n  stop() {\n    return true; // FIXME\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/audio/HTMLPlayer.ts"],"sourceRoot":""}